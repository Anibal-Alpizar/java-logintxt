/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package compraautos;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author anibal
 */
public class frmLogin extends javax.swing.JFrame {

    //variables globales
    //static significa: VARIABLE DE CLASE, osea, cualquier clase puede acceder a ella mediante la clase.
    private static Scanner sc;
    private static int intentos;

    //para saber si es usuario o administrador? 
    private static String usuario;
    private static String contrasegna;     //se recomienda no usar 'Ã±'

    public frmLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        btnIngresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Usuario");

        jLabel2.setText("Password");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(txtPassword)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static void intentos_registrados(int intentos) {   //un metodo, al tener la palabra static, cualquier clase puede acceder a este.
        frmLogin.intentos = intentos;
    }
    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        //evento para cuando le de un click al boton ingrsar.

        usuario = txtUsuario.getText();
        contrasegna = txtPassword.getText();

        FileReader fr = null;   //creamos un objeto para leer archivos, lo ponemos null, porque no lo usaremos de momento
        //IMPORTANTE: TODO MANEJO DE ARCHIVOS .TXT DEBE USAR TRY-CATCH, en caso de que no lo encuentre en la maquina
        try {
            int lineas_registradas = 0; //un contador para saber las lineas registradas del archivo .txt
            int i = 0;                  //varible que usaremos despues para un ciclo while
            String[] usuarios = null;   //creamos un array, de momento vacio, aqui guardaremos los usuarios del archivo
            String hay_linea;           //usaremos esto para saber si el archivo contiene otra linea mas, osea, otro usuario mas
            sc = new Scanner(new File("D:\\usuarios.txt")); //scanner == lector, con el lector iremos a buscar (dentro de la ruta que le pondremos), el archivo
            File miArchivo = new File("D:/usuarios.txt");           //creamos un objeto de tipo archivo, donde guardaremos la ruta del archivo *muy importante*
            fr = new FileReader(miArchivo);          //al lector que declamos arriba, le pasamos por parametros (parentesis) la ruta del archivo a leer
            BufferedReader buffered = new BufferedReader(fr); //BufferedReader = leer dentro del archivo

            try {
                while ((hay_linea = buffered.readLine()) != null) {   //mientras haya lineas dentro del archivo
                    lineas_registradas++;

                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error mientras se ejecutaba el archivo, revisar");
            }
            usuarios = new String[lineas_registradas];  //a mi array le insertamos los usuarios que vaya encontrando durante el while
            while (sc.hasNextLine()) {  //si hay una linea mas
                usuarios[i++] = sc.nextLine();  //usuarios sumelo
            }

            intentos++;

            Usuario miusuario = new Usuario();  //cremos un objeto de la clase usuario, para podemos invocar a los metodos
            miusuario.validarUsuario(usuarios, usuario, contrasegna, intentos); //metodo dentro la clase Usuario

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "No he podido encontrar el archivo, o el archivo esta mal escrito");

        } finally {
            try {
                fr.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error mientras se ejecutaba el archivo, revisar");
            }
        }
    }//GEN-LAST:event_btnIngresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIngresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
